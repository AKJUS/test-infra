periodics:
- annotations:
    testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
    testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-release-1.32-informing
  cluster: eks-prow-build-cluster
  decorate: true
  decoration_config:
    timeout: 1h30m0s
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-service-account: "true"
  name: ci-kind-dra-1-32
  spec:
    containers:
    - args:
      - /bin/bash
      - -xce
      - |
        set -o pipefail
        # A CI job uses pre-built release artifacts and pulls necessary source files from GitHub.
        revision=$(curl --fail --silent --show-error --location ${CI_URL}/${LATEST_TXT})
        # Report what was tested.
        echo "{\"revision\":\"$revision\"}" >"${ARTIFACTS}/metadata.json"
        # git hash from e.g. v1.33.0-alpha.1.161+e62ce1c9db2dad
        hash=${revision/*+/}
        kind_yaml=$(curl --fail --silent --show-error --location "https://raw.githubusercontent.com/kubernetes/kubernetes/$hash/test/e2e/dra/kind.yaml")
        kind_node_source="${CI_URL}/$revision/kubernetes-server-linux-amd64.tar.gz"
        features=( )
        curl --fail --silent --show-error --location "${CI_URL}/$revision/kubernetes-test-linux-amd64.tar.gz" | tar zxvf -
        ginkgo=kubernetes/test/bin/ginkgo
        e2e_test=kubernetes/test/bin/e2e.test
        # The latest kind is assumed to work also for older release branches, should this job get forked.
        curl --fail --silent --show-error --location https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind
        kind build node-image --image=dra/node:latest "${kind_node_source}"
        GINKGO_E2E_PID=
        trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -TERM "${GINKGO_E2E_PID}"; fi' TERM
        trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -INT "${GINKGO_E2E_PID}"; fi' INT
        # Inject ClusterConfiguration which causes etcd to use /tmp
        # (https://github.com/kubernetes-sigs/kind/issues/845#issuecomment-1261248420).
        if ! echo "$kind_yaml" | grep -q '^kubeadmConfigPatches:'; then
            # Add kubeadmConfigPatches list before node list, there is none at the moment.
            kind_yaml=$(echo "$kind_yaml" | sed -e '/nodes:/ i\kubeadmConfigPatches:')
        fi
        kind_yaml=$(echo "$kind_yaml" | sed -e '/^kubeadmConfigPatches:/ a\- |\n  kind: ClusterConfiguration\n  etcd:\n    local:\n      dataDir: /tmp/etcd')
        # Additional features are not in kind.yaml, but they can be added at the end.
        kind create cluster --retain --config <(echo "${kind_yaml}"; for feature in ${features[@]}; do echo "  ${feature}: true"; done) --image dra/node:latest
        atexit () {
            kind export logs "${ARTIFACTS}/kind"
            kind delete cluster
        }
        trap atexit EXIT
        KUBECONFIG=${HOME}/.kube/config ${ginkgo} run --nodes=8 --timeout=24h --silence-skips --force-newlines --no-color --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Alpha, Beta, DynamicResourceAllocation$(for feature in ${features[@]}; do echo , ${feature}; done)} && !Flaky" ${e2e_test} -- -provider=local -report-dir="${ARTIFACTS}" -report-complete-ginkgo -report-complete-junit &
        GINKGO_E2E_PID=$!
        wait "${GINKGO_E2E_PID}"
      command:
      - runner.sh
      env:
      - name: LATEST_TXT
        value: latest-1.32.txt
      - name: CI_URL
        value: https://dl.k8s.io/ci
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250227-3a13bdd784-1.32
      name: ""
      resources:
        limits:
          cpu: "2"
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
