[DEFAULT]
# `template` is a mandatory field that specifies the job template to use
template = dra.jinja
# `files` is a mandatory comma separated list of pairs <suffix>:<job name template> which
# specifies which YAML files and job names need to be generated.
# The name of each generated file is `<base name of template>-<suffix>.yaml`, for example dra-canary.yaml.
# The name of each generated job is made by substituting `{section}` placeholder with section name, e.g. ci-kind-dra.
# In the template, <suffix> becomes a boolean which can be used in if checks.
files = canary:pull-kubernetes-{section}-canary,presubmit:pull-kubernetes-{section},ci:ci-{section}
# k8s-infra-prow-build is required for node jobs
# attempt to run node jobs on eks-prow-build-cluster fails
# with "boskos failed to acquire project: resources not found" error
cluster = k8s-infra-prow-build
testgrid_dashboards = sig-node-dynamic-resource-allocation
testgrid_alert_email = eduard.bartosh@intel.com, patrick.ohly@intel.com
# Overall job timeout.
timeout = 90m
# Time for e2e_node Ginkgo run.
# Must be sufficiently smaller than the overall job timeout to leave time
# for test setup (compilation, deploying VM) and collecting results.
e2e_node_timeout = 60m
# Values > 0 enable version skew testing with an older kubelet version.
kubelet_skew = 0
# Can be set to non-empty for jobs which need extra refs.
need_kubernetes_repo =
need_test_infra_repo =
need_containerd_20_repo =

# This jobs runs e2e.test with a focus on tests for the Dynamic Resource Allocation feature (currently beta)
# on a kind cluster with containerd updated to a version with CDI support.
[kind-dra]
description = Runs E2E tests for Dynamic Resource Allocation beta features against a Kubernetes master cluster created with sigs.k8s.io/kind
job_type = e2e
use_dind = true
cluster = eks-prow-build-cluster
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
release_informing = true

# This jobs runs e2e.test with a focus on tests for the Dynamic Resource Allocation feature (currently alpha, soon beta)
# on a kind cluster with containerd updated to a version with CDI support.
#
# Compared to ci-kind-dra, this one enables all DRA-related features.
[kind-dra-all]
description = Runs E2E tests for Dynamic Resource Allocation alpha and beta features against a Kubernetes master cluster created with sigs.k8s.io/kind
job_type = e2e
cluster = eks-prow-build-cluster
all_features = true
use_dind = true
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go

# Compared to ci-kind-dra-all, this one also enables slow tests.
# Needs to be triggered manually.
[kind-dra-all-slow]
description = Runs E2E tests for Dynamic Resource Allocation alpha and beta features against a Kubernetes master cluster created with sigs.k8s.io/kind, including slow tests
job_type = e2e
cluster = eks-prow-build-cluster
all_features = true
use_dind = true
allow_slow = true
generate = canary,presubmit

# This job runs the current e2e.test against a cluster where the kubelet is from the "current - 1" release.
#
# It enables and tests the same features as kind-dra.
[kind-dra-n-1]
description = Runs E2E tests for Dynamic Resource Allocation beta features against a Kubernetes master cluster created with sigs.k8s.io/kind with kubelet from the "current - 1" release.
job_type = e2e
use_dind = true
cluster = eks-prow-build-cluster
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
kubelet_skew = 1

# This job runs the current e2e.test against a cluster where the kubelet is from the "current - 2" release.
#
# It enables and tests the same features as kind-dra.
[kind-dra-n-2]
description = Runs E2E tests for Dynamic Resource Allocation beta features against a Kubernetes master cluster created with sigs.k8s.io/kind with kubelet from the "current - 2" release.
job_type = e2e
use_dind = true
cluster = eks-prow-build-cluster
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
kubelet_skew = 2

# This job runs the current e2e.test against a cluster where the kubelet is from the "current - 3" release.
#
# It enables and tests the same features as kind-dra.
[kind-dra-n-3]
description = Runs E2E tests for Dynamic Resource Allocation beta features against a Kubernetes master cluster created with sigs.k8s.io/kind with kubelet from the "current - 3" release.
job_type = e2e
use_dind = true
cluster = eks-prow-build-cluster
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
kubelet_skew = 3

# This executes tests in test/e2e_dra with special requirements (local-up-cluster.sh!).
# This is an E2E suite, but conceptually it is more like an integration test (the test
# owns the configuration of components, not the caller).
[dra-integration]
description = Runs integration tests for DRA which need some additional setup in the job.
use_dind = true
use_dind_cdi = true
job_type = integration
need_kubernetes_repo = true
cluster = eks-prow-build-cluster
run_if_changed = /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go

# This job runs e2e_node.test with a focus on tests for the Dynamic Resource Allocation feature (currently beta)
[node-e2e-crio-cgrpv1-dra]
job_type = node
need_kubernetes_repo = true
need_test_infra_repo = true
description = Runs E2E node tests for Dynamic Resource Allocation on-by-default features with CRI-O using cgroup v1
image_config_file = /home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
inject_ssh_public_key = true
release_informing = true

# This job is the same as ci-node-e2e-cgrpv1-crio-dra, but for cgroup v2
[node-e2e-crio-cgrpv2-dra]
job_type = node
need_kubernetes_repo = true
need_test_infra_repo = true
description = Runs E2E node tests for Dynamic Resource Allocation on-by-default features with CRI-O using cgroup v2
image_config_file = /home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
inject_ssh_public_key = true
release_informing = true

# This job runs the same tests as ci-node-e2e-crio-dra with Containerd 1.7 runtime
[node-e2e-containerd-1-7-dra]
job_type = node
need_kubernetes_repo = true
need_test_infra_repo = true
description = Runs E2E node tests for Dynamic Resource Allocation on-by-default features with containerd 1.7
image_config_file = /home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/dra/image-config-containerd-1.7.yaml
release_informing = true

# This job runs the same tests as ci-node-e2e-crio-dra with Containerd 2.0 runtime
[node-e2e-containerd-2-0-dra]
job_type = node
need_kubernetes_repo = true
need_test_infra_repo = true
need_containerd_20_repo = true
description = Runs E2E node tests for Dynamic Resource Allocation on-by-default features with containerd 2.0
image_config_file = /home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-release-2.0/image-config.yaml
release_informing = true
# Automatically testing with one container runtime in one configuration is sufficient to detect basic problems in kubelet early.
# We switched from CRI-O to containerd because the job seemed to finish a bit sooner and there were failures caused by
# crio image config changes.
run_if_changed = (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
